/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, {useEffect, useRef } from 'react'
import { useGLTF, useAnimations } from '@react-three/drei'

export default function Model(props) {
  const group = useRef()
  const { nodes, materials, animations } = useGLTF('/persistance.glb')
  const { actions } = useAnimations(animations, group)
  useEffect(()=>{
    // // Key.001|CC3_Base_Plus_TempMotion|CC3_Base_Plus_TempMotion
    console.log(actions)
    actions['All Animations'].play()
    // actions['Key.001|CC3_Base_Plus_TempMotion|CC3_Base_Plus_TempMotion'].play()
    // actions['Key.002|CC3_Base_Plus_TempMotion|CC3_Base_Plus_TempMotion'].play()
    // actions['Key.003|CC3_Base_Plus_TempMotion|CC3_Base_Plus_TempMotion'].play()
    // actions['Key.004|CC3_Base_Plus_TempMotion|CC3_Base_Plus_TempMotion'].play()
    // actions['Key|CC3_Base_Plus_TempMotion|CC3_Base_Plus_TempMotion'].play()

  })
  return (
    <group ref={group} {...props} dispose={null} rotation={[0, Math.PI / 2 -0.5 , 0 ]} scale={[5, 5, 5]}>
      <mesh geometry={nodes.CC_Base_Tongue.geometry} material={materials.Std_Tongue} rotation={[-Math.PI / 2, 0, 0]} />
      <group rotation={[-Math.PI / 2, 0, 0]}>
        <mesh geometry={nodes.CC_Base_Body_1.geometry} material={materials.Std_Skin_Head} />
        <mesh geometry={nodes.CC_Base_Body_2.geometry} material={materials.Std_Skin_Body} />
        <mesh geometry={nodes.CC_Base_Body_3.geometry} material={materials.Std_Skin_Arm} />
        <mesh geometry={nodes.CC_Base_Body_4.geometry} material={materials.Std_Skin_Leg} />
        <mesh geometry={nodes.CC_Base_Body_5.geometry} material={materials.Std_Nails} />
        <mesh geometry={nodes.CC_Base_Body_6.geometry} material={materials.Std_Eyelash} />
      </group>
      <group rotation={[-Math.PI / 2, 0, 0]}>
        <mesh geometry={nodes.CC_Base_Eye_1.geometry} material={materials.Std_Eye_R} />
        <mesh geometry={nodes.CC_Base_Eye_2.geometry} material={materials.Std_Cornea_R} />
        <mesh geometry={nodes.CC_Base_Eye_3.geometry} material={materials.Std_Eye_L} />
        <mesh geometry={nodes.CC_Base_Eye_4.geometry} material={materials.Std_Cornea_L} />
      </group>
      <group rotation={[-Math.PI / 2, 0, 0]}>
        <mesh geometry={nodes.CC_Base_Teeth_1.geometry} material={materials.Std_Upper_Teeth} />
        <mesh geometry={nodes.CC_Base_Teeth_2.geometry} material={materials.Std_Lower_Teeth} />
      </group>
      <group rotation={[-Math.PI / 2, 0, 0]}>
        <mesh geometry={nodes.CC_Base_EyeOcclusion_1.geometry} material={materials.Std_Eye_Occlusion_R} />
        <mesh geometry={nodes.CC_Base_EyeOcclusion_2.geometry} material={materials.Std_Eye_Occlusion_L} />
      </group>
      <group rotation={[-Math.PI / 2, 0, 0]}>
        <mesh geometry={nodes.CC_Base_TearLine_1.geometry} material={materials.Std_Tearline_R} />
        <mesh geometry={nodes.CC_Base_TearLine_2.geometry} material={materials.Std_Tearline_L} />
      </group>
      <mesh geometry={nodes.Sideburns_Narrow.geometry} material={materials.Beard} rotation={[-Math.PI / 2, 0, 0]} />
      <mesh
        geometry={nodes.Plaid_Punk_Shirt.geometry}
        material={materials.Plaid_Punk_Shirt_ncl1_3}
        rotation={[-Math.PI / 2, 0, 0]}
        scale={[1, 1, 1.01]}
      />
      <mesh geometry={nodes.Jeans.geometry} material={materials.Jeans_ncl1_3} rotation={[-Math.PI / 2, 0, 0]} />
      <mesh
        geometry={nodes.Boots.geometry}
        material={materials.Boots_ncl1_3}
        rotation={[-Math.PI / 2, 0, 0]}
        scale={[1.02, 1.02, 1.07]}
      />
      <mesh
        geometry={nodes.thrasher_cap_1.geometry}
        material={nodes.thrasher_cap_1.material}
        rotation={[-Math.PI / 2, 0, 0]}
      />
      <mesh
        geometry={nodes.thrasher_cap_2.geometry}
        material={nodes.thrasher_cap_2.material}
        rotation={[-Math.PI / 2, 0, 0]}
      />
      <mesh
        geometry={nodes.thrasher_cap_3.geometry}
        material={nodes.thrasher_cap_3.material}
        rotation={[-Math.PI / 2, 0, 0]}
      />
      <mesh
        name="thrasher_cap_4"
        geometry={nodes.thrasher_cap_4.geometry}
        material={nodes.thrasher_cap_4.material}
        rotation={[-Math.PI / 2, 0, 0]}
      />
    </group>
  )
}

useGLTF.preload('/persistance.glb')
